# .github/workflows/ci-cd.yml

name: Trading Platform CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: trading_platform_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: testpassword
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
        
    - name: Setup test database
      run: |
        PGPASSWORD=testpassword psql -h localhost -U postgres -d trading_platform_test -f database/init.sql
      
    - name: Run backend tests
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: trading_platform_test
        DB_USER: postgres
        DB_PASSWORD: testpassword
        JWT_SECRET: test-secret-key
      run: |
        cd backend
        npm test
        
    - name: Run API tests with Newman
      run: |
        npm install -g newman
        cd backend
        npm start &
        sleep 5
        newman run ../tests/postman/trading-platform-tests.json

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install test dependencies
      run: |
        cd tests
        npm ci
        
    - name: Start backend and frontend
      run: |
        # Start backend
        cd backend
        npm install
        npm start &
        
        # Start frontend
        cd ../frontend
        npx http-server -p 8080 &
        
        # Wait for services to start
        sleep 10
        
    - name: Run Cypress tests
      run: |
        cd tests
        npx cypress run
        
    - name: Upload Cypress screenshots
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-screenshots
        path: tests/cypress/screenshots
        
    - name: Upload Cypress videos
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: cypress-videos
        path: tests/cypress/videos

  performance-tests:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup JMeter
      run: |
        wget https://downloads.apache.org/jmeter/binaries/apache-jmeter-5.5.tgz
        tar -xzf apache-jmeter-5.5.tgz
        
    - name: Run load tests
      run: |
        # Start backend
        cd backend
        npm install
        npm start &
        sleep 5
        
        # Run JMeter tests
        ../apache-jmeter-5.5/bin/jmeter -n -t ../tests/performance/trading-platform-load-test.jmx -l results.jtl
        
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: results.jtl

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run npm audit
      run: |
        cd backend
        npm audit --production
        
    - name: Run OWASP dependency check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'trading-platform'
        path: '.'
        format: 'HTML'
        
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: reports